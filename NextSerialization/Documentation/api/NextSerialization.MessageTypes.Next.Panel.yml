### YamlMime:ManagedReference
items:
- uid: NextSerialization.MessageTypes.Next.Panel
  commentId: T:NextSerialization.MessageTypes.Next.Panel
  id: Panel
  parent: NextSerialization.MessageTypes.Next
  children:
  - NextSerialization.MessageTypes.Next.Panel.Name
  - NextSerialization.MessageTypes.Next.Panel.PrintHead
  langs:
  - csharp
  - vb
  name: Panel
  nameWithType: Panel
  fullName: NextSerialization.MessageTypes.Next.Panel
  type: Class
  source:
    remote:
      path: NextSerialization/MessageTypes/Next/Models/Panel.cs
      branch: main
      repo: https://github.com/ITW-Diagraph/NextSerialization.git
    id: Panel
    path: ../MessageTypes/Next/Models/Panel.cs
    startLine: 8
  assemblies:
  - NextSerialization
  namespace: NextSerialization.MessageTypes.Next
  summary: "\nRepresents a surface of a product in which a message can be printed.\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public class Panel
    content.vb: >-
      <Serializable>

      Public Class Panel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: NextSerialization.MessageTypes.Next.Panel.Name
  commentId: P:NextSerialization.MessageTypes.Next.Panel.Name
  id: Name
  parent: NextSerialization.MessageTypes.Next.Panel
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Panel.Name
  fullName: NextSerialization.MessageTypes.Next.Panel.Name
  type: Property
  source:
    remote:
      path: NextSerialization/MessageTypes/Next/Models/Panel.cs
      branch: main
      repo: https://github.com/ITW-Diagraph/NextSerialization.git
    id: Name
    path: ../MessageTypes/Next/Models/Panel.cs
    startLine: 14
  assemblies:
  - NextSerialization
  namespace: NextSerialization.MessageTypes.Next
  summary: "\nThe name of the panel for the print head and message segment.\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: NextSerialization.MessageTypes.Next.Panel.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NextSerialization.MessageTypes.Next.Panel.PrintHead
  commentId: P:NextSerialization.MessageTypes.Next.Panel.PrintHead
  id: PrintHead
  parent: NextSerialization.MessageTypes.Next.Panel
  langs:
  - csharp
  - vb
  name: PrintHead
  nameWithType: Panel.PrintHead
  fullName: NextSerialization.MessageTypes.Next.Panel.PrintHead
  type: Property
  source:
    remote:
      path: NextSerialization/MessageTypes/Next/Models/Panel.cs
      branch: main
      repo: https://github.com/ITW-Diagraph/NextSerialization.git
    id: PrintHead
    path: ../MessageTypes/Next/Models/Panel.cs
    startLine: 20
  assemblies:
  - NextSerialization
  namespace: NextSerialization.MessageTypes.Next
  summary: "\nDefines the print heads and message elements for each head.\n"
  example: []
  syntax:
    content: public PrintHead[] PrintHead { get; set; }
    parameters: []
    return:
      type: NextSerialization.MessageTypes.Next.PrintHead[]
    content.vb: Public Property PrintHead As PrintHead()
  overload: NextSerialization.MessageTypes.Next.Panel.PrintHead*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: NextSerialization.MessageTypes.Next
  commentId: N:NextSerialization.MessageTypes.Next
  name: NextSerialization.MessageTypes.Next
  nameWithType: NextSerialization.MessageTypes.Next
  fullName: NextSerialization.MessageTypes.Next
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NextSerialization.MessageTypes.Next.Panel.Name*
  commentId: Overload:NextSerialization.MessageTypes.Next.Panel.Name
  name: Name
  nameWithType: Panel.Name
  fullName: NextSerialization.MessageTypes.Next.Panel.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: NextSerialization.MessageTypes.Next.Panel.PrintHead*
  commentId: Overload:NextSerialization.MessageTypes.Next.Panel.PrintHead
  name: PrintHead
  nameWithType: Panel.PrintHead
  fullName: NextSerialization.MessageTypes.Next.Panel.PrintHead
- uid: NextSerialization.MessageTypes.Next.PrintHead[]
  isExternal: true
  name: PrintHead[]
  nameWithType: PrintHead[]
  fullName: NextSerialization.MessageTypes.Next.PrintHead[]
  nameWithType.vb: PrintHead()
  fullName.vb: NextSerialization.MessageTypes.Next.PrintHead()
  name.vb: PrintHead()
  spec.csharp:
  - uid: NextSerialization.MessageTypes.Next.PrintHead
    name: PrintHead
    nameWithType: PrintHead
    fullName: NextSerialization.MessageTypes.Next.PrintHead
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: NextSerialization.MessageTypes.Next.PrintHead
    name: PrintHead
    nameWithType: PrintHead
    fullName: NextSerialization.MessageTypes.Next.PrintHead
  - name: ()
    nameWithType: ()
    fullName: ()
