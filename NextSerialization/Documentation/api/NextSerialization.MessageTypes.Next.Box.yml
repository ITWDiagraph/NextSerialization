### YamlMime:ManagedReference
items:
- uid: NextSerialization.MessageTypes.Next.Box
  commentId: T:NextSerialization.MessageTypes.Next.Box
  id: Box
  parent: NextSerialization.MessageTypes.Next
  children:
  - NextSerialization.MessageTypes.Next.Box.Height
  - NextSerialization.MessageTypes.Next.Box.Length
  - NextSerialization.MessageTypes.Next.Box.Width
  langs:
  - csharp
  - vb
  name: Box
  nameWithType: Box
  fullName: NextSerialization.MessageTypes.Next.Box
  type: Class
  source:
    remote:
      path: NextSerialization/MessageTypes/Next/Models/Box.cs
      branch: main
      repo: https://github.com/ITW-Diagraph/NextSerialization.git
    id: Box
    path: ../MessageTypes/Next/Models/Box.cs
    startLine: 9
  assemblies:
  - NextSerialization
  namespace: NextSerialization.MessageTypes.Next
  summary: "\nDefines the overall dimentions of the surfaces and message.\n"
  remarks: Data is not currently used.
  example: []
  syntax:
    content: >-
      [Serializable]

      public class Box
    content.vb: >-
      <Serializable>

      Public Class Box
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: NextSerialization.MessageTypes.Next.Box.Width
  commentId: P:NextSerialization.MessageTypes.Next.Box.Width
  id: Width
  parent: NextSerialization.MessageTypes.Next.Box
  langs:
  - csharp
  - vb
  name: Width
  nameWithType: Box.Width
  fullName: NextSerialization.MessageTypes.Next.Box.Width
  type: Property
  source:
    remote:
      path: NextSerialization/MessageTypes/Next/Models/Box.cs
      branch: main
      repo: https://github.com/ITW-Diagraph/NextSerialization.git
    id: Width
    path: ../MessageTypes/Next/Models/Box.cs
    startLine: 16
  assemblies:
  - NextSerialization
  namespace: NextSerialization.MessageTypes.Next
  summary: "\nThe width, in inches, of the print surface.\n"
  example: []
  syntax:
    content: public decimal Width { get; set; }
    parameters: []
    return:
      type: System.Decimal
    content.vb: Public Property Width As Decimal
  overload: NextSerialization.MessageTypes.Next.Box.Width*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NextSerialization.MessageTypes.Next.Box.Length
  commentId: P:NextSerialization.MessageTypes.Next.Box.Length
  id: Length
  parent: NextSerialization.MessageTypes.Next.Box
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: Box.Length
  fullName: NextSerialization.MessageTypes.Next.Box.Length
  type: Property
  source:
    remote:
      path: NextSerialization/MessageTypes/Next/Models/Box.cs
      branch: main
      repo: https://github.com/ITW-Diagraph/NextSerialization.git
    id: Length
    path: ../MessageTypes/Next/Models/Box.cs
    startLine: 22
  assemblies:
  - NextSerialization
  namespace: NextSerialization.MessageTypes.Next
  summary: "\nThe length, in inches, of the message.\n"
  example: []
  syntax:
    content: public decimal Length { get; set; }
    parameters: []
    return:
      type: System.Decimal
    content.vb: Public Property Length As Decimal
  overload: NextSerialization.MessageTypes.Next.Box.Length*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NextSerialization.MessageTypes.Next.Box.Height
  commentId: P:NextSerialization.MessageTypes.Next.Box.Height
  id: Height
  parent: NextSerialization.MessageTypes.Next.Box
  langs:
  - csharp
  - vb
  name: Height
  nameWithType: Box.Height
  fullName: NextSerialization.MessageTypes.Next.Box.Height
  type: Property
  source:
    remote:
      path: NextSerialization/MessageTypes/Next/Models/Box.cs
      branch: main
      repo: https://github.com/ITW-Diagraph/NextSerialization.git
    id: Height
    path: ../MessageTypes/Next/Models/Box.cs
    startLine: 28
  assemblies:
  - NextSerialization
  namespace: NextSerialization.MessageTypes.Next
  summary: "\nThe height, in inches, of the print surface.\n"
  example: []
  syntax:
    content: public decimal Height { get; set; }
    parameters: []
    return:
      type: System.Decimal
    content.vb: Public Property Height As Decimal
  overload: NextSerialization.MessageTypes.Next.Box.Height*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: NextSerialization.MessageTypes.Next
  commentId: N:NextSerialization.MessageTypes.Next
  name: NextSerialization.MessageTypes.Next
  nameWithType: NextSerialization.MessageTypes.Next
  fullName: NextSerialization.MessageTypes.Next
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NextSerialization.MessageTypes.Next.Box.Width*
  commentId: Overload:NextSerialization.MessageTypes.Next.Box.Width
  name: Width
  nameWithType: Box.Width
  fullName: NextSerialization.MessageTypes.Next.Box.Width
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: NextSerialization.MessageTypes.Next.Box.Length*
  commentId: Overload:NextSerialization.MessageTypes.Next.Box.Length
  name: Length
  nameWithType: Box.Length
  fullName: NextSerialization.MessageTypes.Next.Box.Length
- uid: NextSerialization.MessageTypes.Next.Box.Height*
  commentId: Overload:NextSerialization.MessageTypes.Next.Box.Height
  name: Height
  nameWithType: Box.Height
  fullName: NextSerialization.MessageTypes.Next.Box.Height
